Questions
=========

1. What are the different types of authentication supported by Rest Assured?
Rest Assured supports various authentication mechanisms such as,
1. Basic Authentication (Insecure for production due to cleartext transmission),
2. Digest Authentication (A more secure alternative to basic authentication that uses a
challenge-response mechanism),
3. OAuth (Employs tokens (access tokens, refresh tokens) to access resources. These tokens
are issued by an authorization server after successful authentication.),
4. API Key Authentication (Involves using a unique identifier (API key) to access an API.), and
5. JWT (JSON Web Token) Authentication (Employs tokens (access tokens, refresh tokens) to access
resources. These tokens are issued by an authorization server after successful authentication.).

2. Explain Basic Authentication and how it is implemented in Rest Assured.
Basic Authentication is a simple authentication scheme built into the HTTP protocol. It involves sending
a base64-encoded username and password with each request. In Rest Assured, Basic Authentication can be
implemented using the .auth().basic(username, password) method.

3. How do you implement Basic Authentication in Rest Assured?
RestAssured.given().auth().basic("username", "password").get("https://api.example.com/resource");

4. What is Digest Authentication and how does it differ from Basic Authentication?
Digest Authentication is an improved version of Basic Authentication that provides additional security
by hashing the password before sending it over the network. It prevents the interception of plain-text
passwords. Rest Assured supports Digest Authentication through the .auth().digest(username, password)
method.

5. How do you implement Digest Authentication in Rest Assured?
RestAssured.given().auth().digest("username", "password").get("https://api.example.com/resource");

6. Explain OAuth and its usage in Rest Assured.
OAuth (Open Authorization) is a protocol that allows secure authorization in a simple and standard
method. It enables a third-party application to obtain limited access to an HTTP service on behalf of
a resource owner. Rest Assured can handle OAuth authentication by obtaining access tokens through the
OAuth flow and including them in API requests.

7. How do you implement OAuth authentication in Rest Assured?
OAuth authentication involves obtaining an access token through the OAuth flow (e.g., OAuth 2.0
Authorization Code Grant) and including it in the request headers. Rest Assured provides flexibility to
set custom headers using the .header() method.

8. Explain API Key Authentication and its implementation in Rest Assured.
API Key Authentication involves sending a unique API key with each request to authenticate the client.
It is commonly used in public APIs. In Rest Assured, API Key Authentication can be implemented by including
the API key in the request headers using the .header() method.

9. How do you implement API Key Authentication in Rest Assured?
RestAssured.given().header("X-API-KEY", "your-api-key").get("https://api.example.com/resource");

10. What is JWT (JSON Web Token) Authentication and how do you handle it in Rest Assured?
JWT Authentication involves sending a digitally signed token containing user information with each
request. Rest Assured can handle JWT Authentication by extracting the token from the response and
including it in subsequent requests using the .header() method.

11. How do you handle JWT Authentication in Rest Assured?
String token = "your-JWT-token";
RestAssured.given().header("Authorization", "Bearer " + token).get("https://api.example.com/resource");

12. What's the difference between access tokens and refresh tokens in OAuth?
Access tokens: Short-lived tokens used to access resources. They expire after a certain period and
need to be retrieved again.
Refresh tokens: Longer-lived tokens used to obtain new access tokens when the original access token
expires.