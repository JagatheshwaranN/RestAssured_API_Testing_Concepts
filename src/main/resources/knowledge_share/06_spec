Questions
=========

1. What is a RequestSpecification in Rest Assured API testing?
A RequestSpecification is an interface in Rest Assured that allows you to specify the details of an
HTTP request, such as base URI, query parameters, headers, cookies, request body, etc. It acts as a
builder for creating HTTP requests.

A RequestSpecification allows you to define common request properties that can be reused across
multiple test cases. It helps avoid code duplication and improves test organization.

2. What are the common methods available in RequestSpecification?
Common methods available in RequestSpecification include
1. baseUri(),
2. basePath(),
3. queryParam(),
4. header(),
5. cookie(),
6. body(),
7. auth(), etc.

3. Why is RequestSpecification useful in Rest Assured testing?
RequestSpecification allows you to define common request attributes and reuse them across multiple
API requests. It helps in maintaining consistency, reducing redundancy, and improving code
readability.

4. How do you create a RequestSpecification in Rest Assured?
You can create a RequestSpecification by using the given() method provided by Rest Assured.
RequestSpecification requestSpec = RestAssured.given();

5. Explain how to set base URI and base path using RequestSpecification.
You can set the base URI and base path using the baseUri() and basePath() methods, respectively.
RequestSpecification requestSpec =
RestAssured.given()
            .baseUri("https://api.example.com")
            .basePath("/v1");

6. What is a ResponseSpecification in Rest Assured API testing?
A ResponseSpecification is an interface in Rest Assured that allows you to specify the expected
details of an HTTP response, such as status code, headers, cookies, response body, etc. It acts
as a builder for validating HTTP responses.

7. What are the common methods available in ResponseSpecification?
Common methods available in ResponseSpecification include
1. statusCode(),
2. header(),
3. cookie(),
4. body(),
5. time(),
6. statusLine(), etc.

8. Why is ResponseSpecification useful in Rest Assured testing?
ResponseSpecification allows you to define common expectations for response attributes and reuse
them across multiple API responses. It helps in maintaining consistency, reducing redundancy, and
improving code readability.

9. How do you create a ResponseSpecification in Rest Assured?
You can create a ResponseSpecification by using the expect() method provided by Rest Assured.
ResponseSpecification responseSpec = RestAssured.expect();

10. Explain how to validate status code and response body using ResponseSpecification.
You can validate the status code and response body using the statusCode() and body() methods,
respectively.
ResponseSpecification responseSpec =
RestAssured.expect()
            .statusCode(200)
            .body("key", equalTo("value"));

11. How do you apply RequestSpecification to a Rest Assured request?
You can apply RequestSpecification to a Rest Assured request using the spec() method.

RequestSpecification requestSpec = RestAssured.given()
  .baseUri("https://api.example.com")
  .basePath("/v1")
  .header("Content-Type", "application/json");

// Use the requestSpec in multiple test cases
RestAssured.given()
  .spec(requestSpec)
  .pathParam("userId", 123)
  .when()
    .get("/users/{userId}")
  .then()
    ...;

12. How do you apply ResponseSpecification to a Rest Assured request?
You can apply ResponseSpecification to a Rest Assured request using the spec() method.

ResponseSpecification responseSpec = RestAssured.expect()
  .statusCode(200)
  .contentType("application/json")
  .body("name", equalTo("John Doe"));

// Use the responseSpec in multiple test cases
RestAssured.given()
  ...
.when()
  .get("/users/123")
.then()
  .spec(responseSpec);